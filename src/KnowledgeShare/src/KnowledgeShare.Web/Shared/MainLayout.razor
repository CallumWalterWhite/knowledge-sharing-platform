@using KnowledgeShare.Core.Posts
@inherits LayoutComponentBase
@inject ISearchPostService SearchPostService;
@inject NavigationManager NavigationManager;

<RadzenLayout style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body';">
    <RadzenHeader>
        <div class="container-fluid">
            <div class="row justify-content-start align-items-center">
                <div class="col-5 d-flex align-items-center ps-0 pl-0">
                    <RadzenSidebarToggle Click="@SidebarToggleClick"></RadzenSidebarToggle>
                </div>
                <div class="col-3 d-flex align-items-center justify-content-start pr-0 pe-0">
                    @*<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" AlignItems="AlignItems.Center">
                        <div class="rz-text-align-center">
                            $1$<RadzenAutoComplete @bind-Value=@selected_post TextProperty="Title" Data=@posts onchange=@OnChange LoadData=@OnLoadData Style="width: 24rem; float: left; visibility: visible" />#1#
                            <RadzenDropDown AllowClear="true" @bind-Value=@selected_post
                                                LoadData=@OnLoadData AllowFiltering="true"
                                                Data=@posts TextProperty="Title" ValueProperty="Id" Change="@HandleSelection" Style="width: 24rem; float: left; visibility: visible" />
                        </div>
                    </RadzenStack>*@
                </div>
                <div class="col-3 d-flex align-items-center justify-content-end pr-0 pe-0">
                    <LoginDisplay></LoginDisplay>
                </div>
            </div>
        </div>
    </RadzenHeader>
    <RadzenBody Expanded="@sidebarExpanded">
        <div class="container-fluid pt-2 pt-md-3 pt-lg-4 pt-xl-5 pb-2 pb-lg-5" style="max-width: 1440px;background: transparent;">
            <div class="row">
                <div class="col">
                    <ErrorBoundary>
                        @Body
                    </ErrorBoundary>
                </div>
            </div>
        </div>
    </RadzenBody>
    <RadzenSidebar Expanded="@sidebarExpanded" style="z-index: 2">
        <div class="py-3 py-lg-4" style="padding: var(--rz-panel-menu-item-padding); border-bottom: var(--rz-panel-menu-item-border); display: flex; flex-direction: column; gap: 1rem; align-items: center;">
            <RadzenImage  style="width: 48px; height: 48px;" Path="https://mhrglobal.com/sites/default/files/2022-05/MHR_Logo_RGB.png"></RadzenImage>
            <RadzenText Text="Knowledge sharing platform" TextStyle="Radzen.Blazor.TextStyle.Subtitle1" class="mb-0" style="color: var(--rz-primary-light);" />
        </div>
        <NavMenu />
        <div class="py-3 py-md-4" style="padding: var(--rz-panel-menu-item-padding);">
            <RadzenText Text="Knowledge sharing platform v1.0.0" TextStyle="Radzen.Blazor.TextStyle.Caption" style="color: var(--rz-text-disabled-color);" TagName="Radzen.Blazor.TagName.P" TextAlign="Radzen.TextAlign.Center" />
            <RadzenText Text="Copyright Ⓒ 2023" TextStyle="Radzen.Blazor.TextStyle.Caption" class="mb-0" style="color: var(--rz-text-disabled-color);" TagName="Radzen.Blazor.TagName.P" TextAlign="Radzen.TextAlign.Center" />
        </div>
    </RadzenSidebar>
    <RadzenContextMenu />
    <RadzenDialog />
</RadzenLayout>
@code {
    bool sidebar4Expanded = false;
    Guid? selected_post;

    protected override async Task OnParametersSetAsync()
    {
        await InvokeAsync(StateHasChanged);
    }
    
    private bool sidebarExpanded = true;

    void SidebarToggleClick()
    {
        sidebarExpanded = !sidebarExpanded;
    }
}