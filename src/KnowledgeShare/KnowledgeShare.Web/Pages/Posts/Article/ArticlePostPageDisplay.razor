@page "/articlepost/{Id:guid}"
@using KnowledgeShare.Core.Posts.Types
@inject IGetArticlePostService GetArticlePostService


@if (ArticlePost is not null)
{
    <div class="container">
        <h1 class="title">@ArticlePost.Title</h1>
        <p class="summary">@ArticlePost.GetSummary()</p>
        <LinkPreview Link="@ArticlePost.GetLink()" />

        <div class="row" style="margin-top: 20px;">
            @foreach (var tag in ArticlePost.Tags)
            {
                <RadzenBadge Text=@tag.Value Style="max-width: 90px; margin-right: 5px;"></RadzenBadge>
            }
        </div>
        <div class="info">
            <p class="author">Created by: @ArticlePost.GetAuthor().Name</p>
            <p class="date">Created on: @ArticlePost.GetDateTimeCreated().ToShortDateString()</p>
        </div>

        <div class="actions">
            <button class="like-button" @onclick="Like"><i class="fas fa-heart"></i> Like</button>
            <p class="likes">Likes: @likeCount</p>
        </div>
    </div>

}


<style>
    .container {
        margin: 0 auto;
        padding: 20px;
    }

    .title {
        font-size: 32px;
        font-weight: bold;
        margin: 0 0 10px;
    }

    .summary {
        font-size: 18px;
        line-height: 1.5;
        margin: 0 0 20px;
    }

    .link {
        display: inline-block;
        font-size: 18px;
        color: #06c;
        text-decoration: none;
        border-bottom: 2px solid #06c;
        margin: 0 0 20px;
    }

    .info {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin: 0 0 20px;
    }

    .author {
        font-size: 14px;
        color: #888;
        margin: 0;
    }

    .date {
        font-size: 14px;
        color: #888;
        margin: 0;
    }

    .actions {
        display: flex;
        align-items: center;
    }

    .like-button {
        display: flex;
        align-items: center;
        font-size: 16px;
        color: #06c;
        background-color: transparent;
        border: none;
        cursor: pointer;
        margin: 0;
        padding: 0;
    }

    .like-button:hover {
        text-decoration: underline;
    }

    .likes {
        font-size: 14px;
        color: #888;
        margin: 0 0 0 10px;
    }
</style>

@code {
    [Parameter]  
    public Guid Id { get; set; }

    public ArticlePost? ArticlePost = null;
    
    protected override async Task OnInitializedAsync()
    {
        ArticlePost = await GetArticlePostService.GetArticlePostAsync(Id);
    }
    
    private int likeCount = 0;

    private void Like()
    {
        likeCount++;
    }
}